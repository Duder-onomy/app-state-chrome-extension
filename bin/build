#!/usr/bin/env node
'use strict';

var child_process = require('child_process'),
    chalk = require('chalk');

console.log(chalk.blue('__________ RUNNING BUILD __________'));

run('rm -r build', 'REMOVING BUILD DIR');
run('mkdir build', 'CREATING BUILD DIR');

run('bin/scss');

run('cp -r node_modules/jsoneditor/dist/img build/img'                          , 'COPY IMG DIR TO BUILD DIR');
run('cp app/manifest.json build/manifest.json'                                  , 'COPY MANIFEST JSON TO BUILD DIR');
run('cp app/icon128.png build/icon128.png'                                  , 'COPY ICON TO BUILD DIR');
run('rsync --exclude="app/messaging.js" --exclude="app/panel.js" app/*.js build', 'COPY JS TO BUILD DIR');
run('rsync app/*.html build'                                                    , 'COPY HTML TO BUILD DIR');

// Should consoloditate these watch / use the js api
runAsync('watch', ['bin/scss', 'app/styles']                                    , 'SASS WATCH');
runAsync('watch', ['rsync --exclude="app/messaging.js" --exclude="app/panel.js" app/*.js build', 'app'], 'WATCHING INSERTED-SCRIPT');
runAsync('watch', ['rsync app/*.html build', 'app'], 'WATCHING BACKGROUND');

// Watchify is faster than rerunning browserify, but browserify results seem to show up more robustly in the dev panel
run('watch bin/browserify app'                                      , 'WATCHIFY');

function run(command, msg) {
    msg && console.log(chalk.green(`__________ ${msg} __________`));
    child_process.execSync(command, { stdio : 'inherit' });
}

function runAsync(command, argsArray, msg) {
    msg && console.log(chalk.blue(`__________ ${msg} __________`));
    child_process.spawn(command, argsArray, {stdio:'inherit'});
}
